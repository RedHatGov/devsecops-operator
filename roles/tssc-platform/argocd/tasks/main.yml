---
- name: Wait for Argo CD route to be created by the Operator
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: '{{ argocd_project_name }}'
    name: argocd-server
  register: argocd_route
  until: argocd_route.resources|length > 0
  retries: 10
  delay: 30

- set_fact:
    argocd_route: '{{ argocd_route|json_query("resources[0].spec.host") }}'

- name: Get argocd-ca Secret
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: '{{ argocd_project_name }}'
    name: argocd-ca
  register: argocd_ca_secret
  until: argocd_ca_secret.resources|length > 0
  retries: 5
  delay: 3

- name: Get ca.crt for destinationCACertificate value
  set_fact:
    argocd_ca_cert: "{{ argocd_ca_secret.resources[0].data['ca.crt'] | b64decode }}"

- name: Patch ArgoCD CR with destinationCACertificate value
  k8s:
    definition: "{{ lookup('template', 'argocd-tls-patch.yml.j2') }}"

- name: Grant argocd-application-controller serviceaccount self-provisioner
  k8s:
    definition: "{{ lookup('template', 'cluster-role-binding.yml.j2') }}"

- name: Create tssc service account
  k8s:
    namespace: '{{ argocd_project_name }}'
    definition: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: argocd-cm
      data:
        'accounts.{{ tssc_service_account.username }}': 'apiKey, login'
