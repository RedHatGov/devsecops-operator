---
- name: Check for Postgres credential secret
  k8s_info:
    namespace: "{{ rhsso_project_name }}"
    kind: Secret
    name: "{{ database_secret_name }}"
  register: postgres_credentials

- name: Generate Postgres password
  block:
    - set_fact:
        pg_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"

    - name: Create {{ database_secret_name }} Secret
      k8s:
        definition: "{{ lookup('template', 'postgres-secret.yml.j2') | from_yaml }}"
  when: not postgres_credentials.resources

- name: Set Postgres password
  set_fact:
    pg_password: "{{ postgres_credentials | json_query('resources[0].data.password') | b64decode }}"
  when: postgres_credentials.resources

- name: Set PostgreSQL Deployment to {{ cr_state }}
  k8s:
    definition: '{{ lookup("template", "rhsso-postgresql.yml.j2")|from_yaml }}'
    state: '{{ cr_state }}'

- name: Set RH-SSO Deployment to {{ cr_state }}
  k8s:
    definition: '{{ lookup("template", "rhsso-deployment.yml.j2")|from_yaml }}'
    state: '{{ cr_state }}'
  register: deployment
  until: not deployment.failed
  retries: 5
  delay: 10

- name: Wait for RH-SSO to finish being created
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: '{{ rhsso_project_name }}'
    label_selectors:
      - "app = keycloak"
  register: rhsso_pod
  until: rhsso_pod.resources|length > 0 and (rhsso_pod.resources|first).status.phase == "Running"
  retries: 20
  delay: 30
  when: cr_state == 'present'
