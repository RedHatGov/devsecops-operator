---
# DevSecOpsWorkshop deployment playbook.

- hosts: localhost
  tasks:
    - name: Get cluster dns
      k8s_info:
        api_version: config.openshift.io/v1
        kind: DNS
        namespace: openshift-config
        name: cluster
      register: cluster_dns

    - set_fact:
        cluster_name: '{{ (cluster_dns.resources|first).spec.baseDomain.split(".")[0] }}'

    - set_fact:
        openshift_base_domain: "{{ (cluster_dns.resources|first).spec.baseDomain.replace(cluster_name + '.','') }}"

    - name: Get registry pull secret
      k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ devsecopsworkshop.pull_secret.name | default('pull-secret') }}"
        namespace: "{{ devsecopsworkshop.pull_secret.namespace | default('openshift-config') }}"
      register: pull_secret

    - set_fact:
        reg_rhio_pull_token: "{{ pull_secret.resources[0].data['.dockerconfigjson'] }}"
        tssc_namespace: "{{ ansible_operator_meta.namespace }}"

    - name: Set project names
      set_fact:
        crw_project_name: '{{ tssc_namespace }}'
        crw_deployment_type: devsecops
        devsecops_project_name: '{{ tssc_namespace }}'
        gitea_project_name: '{{ tssc_namespace }}'
        nexus_project_name: '{{ tssc_namespace }}'
        quay_project_name: '{{ tssc_namespace }}'
        rocketchat_project_name: '{{ tssc_namespace }}'
        sonarqube_project_name: '{{ tssc_namespace }}'
        username_distribution_project_name: '{{ tssc_namespace }}'
        workshop_spawner_project_name: '{{ tssc_namespace }}'

    - name: Look for default defined common variables
      include_vars: ../vars/devsecops-workshop/common.yml

    - name: Look for default defined devsecops variables
      include_vars: ../vars/devsecops-workshop/devsecops.yml

    - include_role:
        name: devsecops-workshop/cluster-adjuster
      when: cr_state == 'present'

    - include_role:
        name: devsecops-workshop/devsecops

    # TODO: Run this when CRW cleanup is implemented
    # - include_tasks: cleanup-devsecops.yml
    #   when: cr_state == 'absent'
